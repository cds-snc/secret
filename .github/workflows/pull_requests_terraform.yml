name: "CI Terraform"

on:
  pull_request:
    paths:
      - "aws/**"
      - "terragrunt/**"
      - ".github/workflows/**"

defaults:
  run:
    shell: bash

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 0.13.5
  TERRAGRUNT_VERSION: v0.26.0
  TF_VAR_git_sha: abcdefgh

jobs:
  terraform-plan:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@ed3a0531877aca392eb870f440d9ae7aba83a6bd # v1.4.0
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Setup Conftest
        run: |
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" \
          && wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt" \
          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \
          && tar -zxvf "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" conftest \
          && mv conftest /usr/local/bin \
          && rm "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" checksums.txt

      - name: Plan aws/acm
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # v2.3.1
        with:
          comment-delete: true
          comment-title: Plan for aws/acm
          directory: ./terragrunt/acm
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true

      - name: Install python if needed
        uses: actions/setup-python@e9aba2c848f5ebd159c070c61ea2c4e2b122355e # v2.3.4
        with:
          python-version: '3.8'

      - run: echo "/home/runner/.local/bin" >> $GITHUB_PATH

      - name: Build lambda if needed
        run: |
          python -m pip install --upgrade pip
          make install
          make package

      - name: Plan aws/lambda
        uses: cds-snc/terraform-plan@8be66db9c815352044405fd33120b91918bf1f2e # v2.3.1
        with:
          comment-delete: true
          comment-title: Plan for aws/lambda
          directory: ./terragrunt/lambda
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
