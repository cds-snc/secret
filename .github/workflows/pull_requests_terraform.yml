name: "CI Terraform"

on:
  pull_request:
    paths:
      - "aws/**"
      - "terragrunt/**"
      - ".github/workflows/*"

defaults:
  run:
    shell: bash

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 0.13.5
  TERRAGRUNT_VERSION: v0.26.0

jobs:
  terraform-plan:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "bin" >> $GITHUB_PATH

      - name: Get changed files
        id: changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - name: Get touched Terragrunt modules
        run: |
          MODULES=`echo '${{ steps.changed-files.all }}' | jq -c '[.[] | match("(.*aws?)\/(.*)\/").captures[1].string] | unique | select(length > 0)'`
          echo "MODULES=$MODULES" >> $GITHUB_ENV

      - name: Get touched Terragrunt configurations
        run: |
          CONFIGS=`echo '${{ steps.changed-files.all }}' | jq -c '[.[] | match("(.*terragrunt?)\/(.*)\/").captures[1].string] | unique | select(length > 0)'`
          echo "CONFIGS=$CONFIGS" >> $GITHUB_ENV

      - name: Plan aws/acm
        if: contains(env.MODULES, 'acm') || contains(env.CONFIGS, 'acm')
        run: |
          cd env/acm
          ../../bin/terragrunt plan --terragrunt-non-interactive

      - name: Install python if needed
        if: contains(env.MODULES, 'lambda')
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'

      - name: Build lambda if needed
        if: contains(env.MODULES, 'lambda')
        run: |
          make install
          make package

      - name: Plan aws/lambda
        if: contains(env.MODULES, 'lambda')
        run: |
          cd terragrunt/lambda
          ../../bin/terragrunt plan --terragrunt-non-interactive