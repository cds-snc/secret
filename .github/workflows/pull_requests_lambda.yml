name: "CI Lambda"

on:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  go-tests:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    container: golang:1.22.2@sha256:c4fb952e712efd8f787bcd8e53fd66d1d83b7dc26adabc218e9eac1dbf776bdf

    services:
      dynamodb-local:
        image: "amazon/dynamodb-local@sha256:9769d8391d4d4533a0f7d92c3ff43b09b3e39fd6cdedffda7c8cfb1016fa529b"
        ports:
          - 8000:8000

      local-kms:
        image: nsmithuk/local-kms@sha256:c0d7ff506b4aa1c061ae6743cf292a99fb9ec1968a6e5f3a3272110925860501
        ports:
          - "8080:8080"
        volumes:
          - "${{ github.workspace }}/.devcontainer/docker/kms/data:/data/"
          - "${{ github.workspace }}/.devcontainer/docker/kms/init:/init/"
        env:
          KMS_REGION: "ca-central-1"

    steps:
      - name: Checkout
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0

      - name: Restart local-kms
        # Restart local-kms after volumes have been checked out
        # https://github.com/orgs/community/discussions/42127
        uses: docker://docker@sha256:7ff986c816ccc8af25c9f560ca0cba45de2ca2ea2d7099c63099f5539e0d0359
        with:
          args: docker restart "${{ job.services.local-kms.id }}"

      - name: Install dependencies
        run: go get .

      - name: Test
        run: make test
        env:
          AWS_ACCESS_KEY_ID: "AWSACCESSKEYID"
          AWS_SECRET_ACCESS_KEY: "AWSSECRETACCESSKEY"
